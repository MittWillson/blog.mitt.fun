<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于 《我被K8S蹂躏千百遍》的那些事</title>
      <link href="service/kubernetes/2021/kubernetes/issues-of-k8s/"/>
      <url>service/kubernetes/2021/kubernetes/issues-of-k8s/</url>
      
        <content type="html"><![CDATA[<p>记录一些我遇到的K8S和Docker的问题以及相应的解决方案</p><span id="more"></span><h2 id="问题列表"><a href="#问题列表" class="headerlink" title="问题列表"></a>问题列表</h2><p><strong>WARN No swap limit support</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/default/grub</span><br><span class="line"><span class="comment"># 追加以下内容</span></span><br><span class="line"><span class="comment"># 如果存在该变量则只追加内容</span></span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">&quot;cgroup_enable=memory swapaccount=1&quot;</span></span><br><span class="line"></span><br><span class="line">$ sudo update-grub</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要重启生效</span></span><br></pre></td></tr></table></figure><p><strong>failed to allocate for range 0: no IP addresses available in range set: 172.32.xx.1-172.32.xx.254</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ rm -rf /var/lib/cni/networks/*</span><br><span class="line">$ systemctl restart containerd</span><br><span class="line">$ systemctl restart kubelet</span><br></pre></td></tr></table></figure><p><strong>Warning: Stopping docker.service, but it can still be activated by: docker.socket</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm -rf /lib/systemd/system/docker.socket</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> service </category>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> K8S </tag>
            
            <tag> K3S </tag>
            
            <tag> Issues </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速扩容 Node 的 podCIDR IP范围</title>
      <link href="service/kubernetes/2021/kubernetes/node-ip-cidr-extends/"/>
      <url>service/kubernetes/2021/kubernetes/node-ip-cidr-extends/</url>
      
        <content type="html"><![CDATA[<h2 id="pre-post"><a href="#pre-post" class="headerlink" title="pre-post()"></a>pre-post()</h2><p>为了更好的压榨节点(因为穷买不起第二台), 所以在单台机器上跑了更多的服务，从而导致了更多的pod需要IP分配，而超量则产生了一个异常 <code>failed to allocate for range 0: no IP addresses available in range set</code>, 节点默认安装下来是 <code>/16</code> 的段，而每个节点会分到 <code>/24</code> 段，这意味着每个节点最多可分配 <code>256</code> 个 POD IP，这对于我这种精扒皮来说远远不够，所以就需要对节点的IP段进行扩容，让每个节点能分到更多的IP</p><span id="more"></span><!--## Confiuration('修改配置')为了能够让每个节点获取更大的IP段，我们需要修改 `Flannel` 的配置进行实现在Kubernetes里，Flannel的配置保存在Configmap里，路径为: `kube-system` 下的`configmap/kube-flannel-cfg`其中 `net-conf.json` 的配置则是我们需要修改的> 默认配置内容<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">net-conf.json:</span> <span class="string">|</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;Network&quot;:</span> <span class="string">&quot;10.244.0.0/16&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Backend&quot;:</span> &#123;</span><br><span class="line">      <span class="attr">&quot;Type&quot;:</span> <span class="string">&quot;vxlan&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>这里引申一下配置文档: <a href="https://github.com/flannel-io/flannel/blob/master/Documentation/configuration.md">Flannel Configuration</a></p><p>根据文档我们只需要修改 <code>SubnetLen</code> 即可，默认为 <code>24</code>(如果Network不小于24)</p><p>这里我们只需要改为 <code>22</code> 就能让每个节点的IP可用数量翻倍得到 <code>1022</code> 个IP，对我来说就足够用了, 毕竟跑太多pod也会导致容器操作响应慢等问题</p><blockquote><p>修改后的配置</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">net-conf.json:</span> <span class="string">|</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;Network&quot;:</span> <span class="string">&quot;10.244.0.0/16&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;SubnetLen&quot;:</span> <span class="number">22</span>,</span><br><span class="line">    <span class="attr">&quot;Backend&quot;:</span> &#123;</span><br><span class="line">      <span class="attr">&quot;Type&quot;:</span> <span class="string">&quot;vxlan&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>修改后杀掉 <code>kube-flannel</code> pod 重建，发现并没有生效，这是因为 <code>Node</code> 初始化了 <code>PodCIDR</code>，所以现在改变 <code>Flannel</code> 的配置并不会修改 <code>Node</code> 的 <code>PodCIDR</code></p><p>–&gt;</p><h2 id="修改Node"><a href="#修改Node" class="headerlink" title="修改Node"></a>修改Node</h2><p>由于 Node 信息无法直接修改，这里采取一种变相措施（有一定风险，自己承担），保存Node的配置，修改Node中PodCIDR信息，然后删除掉Node资源，趁Kubelet还没有反应过来就偷偷把修改过的Node资源加回去</p><blockquote><p>保存 node.yaml</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get node test-worker -o yaml &gt; node.yaml</span><br></pre></td></tr></table></figure><blockquote><p>修改 node.yaml 的 podCIDR</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">podCIDR:</span> <span class="number">10.32</span><span class="number">.2</span><span class="number">.0</span><span class="string">/22</span></span><br><span class="line">  <span class="attr">podCIDRs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">10.32</span><span class="number">.2</span><span class="number">.0</span><span class="string">/22</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p>这里我们只需要改为 <code>22</code> 就能让每个节点pod的IP可用数量翻倍得到 <code>1022</code> 个IP，对我来说就足够用了</p><blockquote><p>删除 node 信息</p></blockquote><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl delete <span class="keyword">node</span> <span class="title">test-worker</span></span><br></pre></td></tr></table></figure><blockquote><p>导入节点</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> kubectl apply <span class="operator">-f</span> ./node.yaml</span><br></pre></td></tr></table></figure><p>然后就完成了，创建新pod的时候，就会从podCIDR和IP缓存文件信息里找可用IP创建，（不过奇怪的是我的pod并没有超过200，但依然出现IP池短缺的问题，可能是flannel在销毁pod后并没有销毁IP信息，导致IP一直被占用）</p>-->]]></content>
      
      
      <categories>
          
          <category> service </category>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> K8S </tag>
            
            <tag> K3S </tag>
            
            <tag> Issues </tag>
            
            <tag> Flannel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用 Cloudflare Workers 创建一个跳转友链服务(乞丐级简易版)</title>
      <link href="scripts/2021/script/cf-workers-redirect-to-friends/"/>
      <url>scripts/2021/script/cf-workers-redirect-to-friends/</url>
      
        <content type="html"><![CDATA[<h2 id="pre-post"><a href="#pre-post" class="headerlink" title="pre-post()"></a>pre-post()</h2><p>水了几篇博文胆子肥了起来，开始到处交换友链，但是想创建一个简便易维护的友链服务，前期先实现能跳转到目标链接，后期想能扩展扩展支持监控友链目标网站的有效状态，结合通知来实现报警，但本篇只实现了 <code>能用</code> （逃，如果没咕咕咕的话以后会升级代码并支持更高级的功能然后<del>再水一篇</del>发布新文章来介绍。</p><blockquote><p>更新日期: 2021-03-03</p></blockquote><span id="more"></span><h2 id="reuqired-‘依赖’"><a href="#reuqired-‘依赖’" class="headerlink" title="reuqired(‘依赖’)"></a>reuqired(‘依赖’)</h2><p>需要做以下步骤</p><ul><li>创建一个 <code>KV</code> 仓库</li><li>创建一个 <code>Worker</code></li><li>将 <code>KV</code> 关联到 <code>Worker</code> 并命名为 <code>FRIENDS</code></li><li>将 <code>代码本体</code> 复制到 <code>Worker</code></li></ul><h2 id="code-‘代码本体’"><a href="#code-‘代码本体’" class="headerlink" title="code(‘代码本体’)"></a>code(‘代码本体’)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">addEventListener(<span class="string">&#x27;fetch&#x27;</span>, <span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">  event.respondWith(handleRequest(event.request))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> domains = &#123;</span><br><span class="line">  <span class="function"><span class="title">get</span>(<span class="params">name</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> FRIENDS.get(name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Respond to the request</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Request&#125;</span> <span class="variable">request</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">handleRequest</span>(<span class="params">request</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="keyword">new</span> URL(request.url);</span><br><span class="line">  <span class="keyword">const</span> host = url.host;</span><br><span class="line">  <span class="keyword">const</span> path = url.pathname;</span><br><span class="line">  <span class="keyword">let</span> friendName = (host.match(<span class="regexp">/^(.*?)(?=\.)/g</span>) || [])[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">let</span> redirect = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// friends.mitt.fun/&#123;name&#125;</span></span><br><span class="line">  <span class="keyword">if</span> (friendName === <span class="string">&#x27;friends&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> r = <span class="regexp">/^\/?([^\/]*)\/?(.*?)$/g</span>.exec(path) || [];</span><br><span class="line">    <span class="keyword">if</span> (path.match(<span class="regexp">/^\/?$/g</span>)) &#123;</span><br><span class="line">      <span class="keyword">return</span> indexPage();</span><br><span class="line">    &#125;</span><br><span class="line">    friendName = r[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">const</span> fUrl = <span class="keyword">await</span> domains.get(friendName);</span><br><span class="line">    <span class="keyword">if</span> (fUrl) &#123;</span><br><span class="line">      redirect = fUrl.replace(<span class="regexp">/\/$/g</span>, <span class="string">&#x27;&#x27;</span>) + <span class="string">&#x27;/&#x27;</span> + (r[<span class="number">2</span>] || <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> fUrl = <span class="keyword">await</span> domains.get(friendName);</span><br><span class="line">    <span class="keyword">if</span> (fUrl) &#123;</span><br><span class="line">      redirect = fUrl.replace(<span class="regexp">/\/$/g</span>, <span class="string">&#x27;&#x27;</span>) + path;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!redirect) &#123;</span><br><span class="line">    <span class="keyword">return</span> noFriendAnyMore(friendName);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> redirectTo(friendName, redirect);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">noFriendAnyMore</span>(<span class="params">friendName</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Response(<span class="string">`Sorry, <span class="subst">$&#123;friendName || <span class="string">&#x27;this one&#x27;</span>&#125;</span> is not be my firends anymore.`</span>, &#123;<span class="attr">status</span>: <span class="number">200</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">redirectTo</span>(<span class="params">friendName, url</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Response(<span class="string">&#x27;You are going to Mitt\&#x27;s friend\&#x27;s area&#x27;</span>, &#123;<span class="attr">status</span>: <span class="number">302</span>, <span class="attr">headers</span>: &#123;<span class="attr">location</span>: url&#125;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">indexPage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Response(<span class="string">`Hi there, this is Mitt&#x27;s Friends redirector, nice to see you :)`</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="subject-‘目前功能介绍’"><a href="#subject-‘目前功能介绍’" class="headerlink" title="subject(‘目前功能介绍’)"></a>subject(‘目前功能介绍’)</h2><p>目前实现以下两种访问方式</p><blockquote><p>https://{KEY}.mitt.fun</p></blockquote><p>通过域名最底层的名字 <code>&#123;KEY&#125;</code> 来关联 <code>KV</code> 服务中的 <code>Key</code> 值</p><p>你可以定义任何层级的域名，只要最外面是 <code>&#123;KEY&#125;</code> 就可以了, 比如 <code>https://&#123;KEY&#125;.friends.of.mine.mitt.fun</code> 也同样会匹配</p><blockquote><p><a href="https://friends.mitt.fun/%7BKEY%7D">https://friends.mitt.fun/{KEY}</a></p></blockquote><p>通过访问 Path 的第一层 <code>&#123;KEY&#125;</code> 来关联 <code>KV</code> 服务中的 <code>Key</code> 值</p><p>以上的两种方式都支持传递路径，即通过在后面跟上 <code>/xxxx</code> 来转发到目标网址的 <code>/xxxx</code></p><h2 id="subject-‘example’"><a href="#subject-‘example’" class="headerlink" title="subject(‘example’)"></a>subject(‘example’)</h2><p>自定义域名方式转发: </p><ul><li>关联 <code>edison.mitt.fun</code> 域名到创建的 <code>Worker</code></li><li>在 <code>KV</code> 服务中填写 Key 为 <code>edison</code>, Value 为 <code>https://www.wevg.org</code></li><li>测试访问 <code>https://edison.mitt.fun</code> 会302跳转到 <code>https://www.wevg.org</code></li><li>测试访问 <code>https://edison.mitt.fun/friends/</code> 会302跳转到 <code>https://www.wevg.org/friends/</code></li></ul><p>目录方式转发:</p><ul><li>关联 <code>friends.mitt.fun</code> 域名到创建的 <code>Worker</code></li><li>在 <code>KV</code> 服务中填写 Key 为 <code>peter</code>, Value 为 <code>https://pzhang.net/</code></li><li>测试访问 <code>https://friends.mitt.fun/peter</code> 会302跳转到 <code>https://pzhang.net/</code></li><li>测试访问 <code>https://friends.mitt.fun/peter/archives/</code> 会302跳转到 <code>https://pzhang.net/archives/</code></li></ul><h2 id="end"><a href="#end" class="headerlink" title="end()"></a>end()</h2><p>又水了一篇，好唉。 (别问我为啥某人不在 <code>Links</code></p>]]></content>
      
      
      <categories>
          
          <category> scripts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudflare </tag>
            
            <tag> Scripts </tag>
            
            <tag> Friends </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域名解析使MX和CNAME共存 解决域名邮箱收发件问题</title>
      <link href="dns/2021/domain/dns-mx-cname-coexist/"/>
      <url>dns/2021/domain/dns-mx-cname-coexist/</url>
      
        <content type="html"><![CDATA[<h2 id="pre-post"><a href="#pre-post" class="headerlink" title="pre-post()"></a>pre-post()</h2><p>因为我自己搞了一个域名邮箱，用的腾讯企业邮箱，之前为了上国内CDN从<code>Cloudflare</code> 迁移出来换成 <code>Cloudflare Partner</code>，用 <code>DNSPOD</code> 实现 <code>GEODNS</code>，国内用 <code>百度CDN</code>，国外用 <code>Cloudflare</code>，通过 <code>CNAME</code> 解析指向，但是后面发现一个问题就是域名邮箱突然无法正常收发邮件了，网上通过谷歌和其他博主的博文得知这是DNS的特性导致的(<a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考5</a>)，如果想要解决就只能<code>A+MX</code>的共存方式，但是显然这种方式对我来说弊端很多，另一种方案就是将网站解析到<code>www</code>子域名，把<code>@</code>腾出来给<code>MX</code>，或者将域名邮箱解析到 <code>mail</code> 子域名，虽然对大部分人来说可行，但是对我有点强迫症，我就想用<code>@</code>，毕竟chrome都模糊化<code>www</code>和<code>@</code>了，自然是<code>@</code>更适合一点，接下来的方法就是我自己瞎鼓捣出来的，但是又没有查询相关资料证明100%不会出问题，但到目前来看还是很稳的，也不确定放到其他DNS服务商以及其他CDN服务商是否同样有效。</p><span id="more"></span><h2 id="subject-‘实现目标’"><a href="#subject-‘实现目标’" class="headerlink" title="subject(‘实现目标’)"></a>subject(‘实现目标’)</h2><p>能够使用 <code>DNSPOD</code> 使 <code>pwecho.com</code> 支持境内境外不同CDN服务 <code>Cloudflare</code> 和 <code>BaiduCDN</code>，同时兼容 <code>腾讯企业邮箱</code></p><!-- > 为保护个人隐私，文章使用域名为虚拟域名，现实配置的是另一个域名 --><h2 id="subject-‘当前配置’"><a href="#subject-‘当前配置’" class="headerlink" title="subject(‘当前配置’)"></a>subject(‘当前配置’)</h2><blockquote><p>Cloudflare Partner</p></blockquote><table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Record</th><th align="left">Remark</th></tr></thead><tbody><tr><td align="left">@</td><td align="left">CNAME</td><td align="left">s-ip.pwecho.com</td><td align="left">网站服务器</td></tr></tbody></table><p>使用 <code>s-ip.pwecho.com</code> 方便更改IP，CDN需要CNAME指向 <code>s-ip.pwecho.com</code></p><blockquote><p>DNSPOD</p></blockquote><table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Record</th><th align="left">Region</th><th align="left">Remark</th></tr></thead><tbody><tr><td align="left">s-ip</td><td align="left">A</td><td align="left">x.x.x.x</td><td align="left">网站服务器源站IP</td><td align="left"></td></tr><tr><td align="left">@</td><td align="left">MX</td><td align="left">mx1.qq.com</td><td align="left">默认</td><td align="left">腾讯企业邮箱</td></tr><tr><td align="left">@</td><td align="left">MX</td><td align="left">mx2.qq.com</td><td align="left">默认</td><td align="left">腾讯企业邮箱</td></tr><tr><td align="left">@</td><td align="left">CNAME</td><td align="left">pwecho.com.cdn.cloudflare.com</td><td align="left">境外</td><td align="left">Cloudflare</td></tr><tr><td align="left">@</td><td align="left">CNAME</td><td align="left">pwecho.com.a.bdydns.com</td><td align="left">境内</td><td align="left">BaiduCDN</td></tr></tbody></table><p>虽然 <code>DNSPOD</code> 支持MX和CNAME同时记录，会提示可能会产生不兼容问题，但可以忽略，实际测试会出现无法正常返回MX的情况</p><h2 id="subject-‘解决方案’"><a href="#subject-‘解决方案’" class="headerlink" title="subject(‘解决方案’)"></a>subject(‘解决方案’)</h2><p>目前的解决方案是，单独剥离一个CNAME，境外让 <code>Cloudflare</code> 负责提供MX和A记录，境内让 <code>DNSPOD</code> 提供，以下是修改方案</p><blockquote><p>Cloudflare Partner</p></blockquote><table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Record</th><th align="left">Remark</th></tr></thead><tbody><tr><td align="left">@</td><td align="left">CNAME</td><td align="left">s-ip.pwecho.com</td><td align="left">网站服务器</td></tr><tr><td align="left">@</td><td align="left">MX</td><td align="left">mx1.qq.com</td><td align="left">腾讯企业邮箱</td></tr><tr><td align="left">@</td><td align="left">MX</td><td align="left">mx2.qq.com</td><td align="left">腾讯企业邮箱</td></tr></tbody></table><blockquote><p>DNSPOD</p></blockquote><table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Record</th><th align="left">Region</th><th align="left">Remark</th></tr></thead><tbody><tr><td align="left">s-ip</td><td align="left">A</td><td align="left">x.x.x.x</td><td align="left">网站服务器源站IP</td><td align="left"></td></tr><tr><td align="left">root.cn-bd-cdn</td><td align="left">CNAME</td><td align="left">pwecho.com.a.bdydns.com</td><td align="left">默认</td><td align="left">BaiduCDN</td></tr><tr><td align="left">root.cn-bd-cdn</td><td align="left">MX</td><td align="left">mx1.qq.com</td><td align="left">默认</td><td align="left">腾讯企业邮箱</td></tr><tr><td align="left">root.cn-bd-cdn</td><td align="left">MX</td><td align="left">mx2.qq.com</td><td align="left">默认</td><td align="left">腾讯企业邮箱</td></tr><tr><td align="left">@</td><td align="left">CNAME</td><td align="left">pwecho.com.cdn.cloudflare.com</td><td align="left">境外</td><td align="left">Cloudflare</td></tr><tr><td align="left">@</td><td align="left">CNAME</td><td align="left">root.cn-bd-cdn.pwecho.com</td><td align="left">境内</td><td align="left"></td></tr></tbody></table><p>通过以上配置查询DNS记录即可得出结果</p><blockquote><p>中国地区</p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ dig MX pwecho.com</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG <span class="number">9</span>.<span class="number">14</span>.<span class="number">8</span> &lt;&lt;&gt;&gt; MX pwecho.com</span><br><span class="line">;; global options: +<span class="built_in">cmd</span></span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: <span class="number">11135</span></span><br><span class="line">;; flags: qr <span class="built_in">rd</span> ra; QUERY: <span class="number">1</span>, ANSWER: <span class="number">3</span>, AUTHORITY: <span class="number">0</span>, ADDITIONAL: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: <span class="number">0</span>, flags:; udp: <span class="number">512</span></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;pwecho.com.                    <span class="keyword">IN</span>      MX</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">pwecho.com.             <span class="number">597</span>     <span class="keyword">IN</span>      CNAME   root.cn-bd-cdn.pwecho.com.</span><br><span class="line">root.cn-bd-cdn.pwecho.com. <span class="number">597</span>  <span class="keyword">IN</span>      MX      <span class="number">5</span> mxbiz1.qq.com.</span><br><span class="line">root.cn-bd-cdn.pwecho.com. <span class="number">597</span>  <span class="keyword">IN</span>      MX      <span class="number">10</span> mxbiz2.qq.com.</span><br><span class="line"></span><br><span class="line">;; Query <span class="built_in">time</span>: <span class="number">10</span> msec</span><br><span class="line">;; SERVER: <span class="number">192</span>.<span class="number">168</span>.<span class="number">50</span>.<span class="number">1</span>#<span class="number">53</span>(<span class="number">192</span>.<span class="number">168</span>.<span class="number">50</span>.<span class="number">1</span>)</span><br><span class="line">;; WHEN: Sat Feb <span class="number">27</span> <span class="number">14</span>:<span class="number">11</span>:<span class="number">41</span> ;; MSG SIZE  rcvd: <span class="number">117</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ dig CNAME pwecho.com</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG <span class="number">9</span>.<span class="number">14</span>.<span class="number">8</span> &lt;&lt;&gt;&gt; CNAME pwecho.com</span><br><span class="line">;; global options: +<span class="built_in">cmd</span></span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: <span class="number">63349</span></span><br><span class="line">;; flags: qr <span class="built_in">rd</span> ra; QUERY: <span class="number">1</span>, ANSWER: <span class="number">1</span>, AUTHORITY: <span class="number">0</span>, ADDITIONAL: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;pwecho.com.                    <span class="keyword">IN</span>      CNAME</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">pwecho.com.             <span class="number">563</span>     <span class="keyword">IN</span>      CNAME   root.cn-bd-cdn.pwecho.com.</span><br><span class="line"></span><br><span class="line">;; Query <span class="built_in">time</span>: <span class="number">76</span> msec</span><br><span class="line">;; SERVER: <span class="number">192</span>.<span class="number">168</span>.<span class="number">50</span>.<span class="number">1</span>#<span class="number">53</span>(<span class="number">192</span>.<span class="number">168</span>.<span class="number">50</span>.<span class="number">1</span>)</span><br><span class="line">;; WHEN: Sat Feb <span class="number">27</span> <span class="number">14</span>:<span class="number">12</span>:<span class="number">10</span> ;; MSG SIZE  rcvd: <span class="number">57</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ dig A pwecho.com</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG <span class="number">9</span>.<span class="number">14</span>.<span class="number">8</span> &lt;&lt;&gt;&gt; A pwecho.com</span><br><span class="line">;; global options: +<span class="built_in">cmd</span></span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: <span class="number">12359</span></span><br><span class="line">;; flags: qr <span class="built_in">rd</span> ra; QUERY: <span class="number">1</span>, ANSWER: <span class="number">4</span>, AUTHORITY: <span class="number">0</span>, ADDITIONAL: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: <span class="number">0</span>, flags:; udp: <span class="number">512</span></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;pwecho.com.                    <span class="keyword">IN</span>      A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">pwecho.com.             <span class="number">37</span>      <span class="keyword">IN</span>      CNAME   root.cn-bd-cdn.pwecho.com.</span><br><span class="line">root.cn-bd-cdn.pwecho.com. <span class="number">37</span>   <span class="keyword">IN</span>      CNAME   pwecho.com.a.bdydns.com.</span><br><span class="line">pwecho.com.a.bdydns.com. <span class="number">37</span>     <span class="keyword">IN</span>      CNAME   opencdncloud.jomodns.com.</span><br><span class="line">opencdncloud.jomodns.com. <span class="number">37</span>    <span class="keyword">IN</span>      A       <span class="number">101</span>.<span class="number">72</span>.<span class="number">249</span>.<span class="number">35</span></span><br><span class="line"></span><br><span class="line">;; Query <span class="built_in">time</span>: <span class="number">9</span> msec</span><br><span class="line">;; SERVER: <span class="number">192</span>.<span class="number">168</span>.<span class="number">50</span>.<span class="number">1</span>#<span class="number">53</span>(<span class="number">192</span>.<span class="number">168</span>.<span class="number">50</span>.<span class="number">1</span>)</span><br><span class="line">;; WHEN: Sat Feb <span class="number">27</span> <span class="number">14</span>:<span class="number">15</span>:<span class="number">33</span> ;; MSG SIZE  rcvd: <span class="number">153</span></span><br></pre></td></tr></table></figure><blockquote><p>境外地区</p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ dig MX pwecho.com</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG <span class="number">9</span>.<span class="number">16</span>.<span class="number">1</span>-Ubuntu &lt;&lt;&gt;&gt; MX pwecho.com</span><br><span class="line">;; global options: +<span class="built_in">cmd</span></span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: <span class="number">48915</span></span><br><span class="line">;; flags: qr <span class="built_in">rd</span> ra; QUERY: <span class="number">1</span>, ANSWER: <span class="number">2</span>, AUTHORITY: <span class="number">0</span>, ADDITIONAL: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: <span class="number">0</span>, flags:; udp: <span class="number">1232</span></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;pwecho.com.                    <span class="keyword">IN</span>      MX</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">pwecho.com.             <span class="number">600</span>     <span class="keyword">IN</span>      MX      <span class="number">10</span> mxbiz2.qq.com.</span><br><span class="line">pwecho.com.             <span class="number">600</span>     <span class="keyword">IN</span>      MX      <span class="number">5</span> mxbiz1.qq.com.</span><br><span class="line"></span><br><span class="line">;; Query <span class="built_in">time</span>: <span class="number">276</span> msec</span><br><span class="line">;; SERVER: <span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>#<span class="number">53</span>(<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>)</span><br><span class="line">;; WHEN: Sat Feb <span class="number">27</span> <span class="number">07</span>:<span class="number">14</span>:<span class="number">54</span> CET <span class="number">2021</span></span><br><span class="line">;; MSG SIZE  rcvd: <span class="number">88</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ dig CNAME pwecho.com</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG <span class="number">9</span>.<span class="number">16</span>.<span class="number">1</span>-Ubuntu &lt;&lt;&gt;&gt; CNAME pwecho.com</span><br><span class="line">;; global options: +<span class="built_in">cmd</span></span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: <span class="number">55778</span></span><br><span class="line">;; flags: qr <span class="built_in">rd</span> ra; QUERY: <span class="number">1</span>, ANSWER: <span class="number">1</span>, AUTHORITY: <span class="number">0</span>, ADDITIONAL: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: <span class="number">0</span>, flags:; udp: <span class="number">1232</span></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;pwecho.com.                    <span class="keyword">IN</span>      CNAME</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">pwecho.com.             <span class="number">600</span>     <span class="keyword">IN</span>      CNAME   pwecho.com.cdn.cloudflare.<span class="built_in">net</span>.</span><br><span class="line"></span><br><span class="line">;; Query <span class="built_in">time</span>: <span class="number">276</span> msec</span><br><span class="line">;; SERVER: <span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>#<span class="number">53</span>(<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>)</span><br><span class="line">;; WHEN: Sat Feb <span class="number">27</span> <span class="number">07</span>:<span class="number">14</span>:<span class="number">43</span> CET <span class="number">2021</span></span><br><span class="line">;; MSG SIZE  rcvd: <span class="number">82</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ dig A pwecho.com</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG <span class="number">9</span>.<span class="number">16</span>.<span class="number">1</span>-Ubuntu &lt;&lt;&gt;&gt; A pwecho.com</span><br><span class="line">;; global options: +<span class="built_in">cmd</span></span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: <span class="number">35366</span></span><br><span class="line">;; flags: qr <span class="built_in">rd</span> ra; QUERY: <span class="number">1</span>, ANSWER: <span class="number">4</span>, AUTHORITY: <span class="number">0</span>, ADDITIONAL: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: <span class="number">0</span>, flags:; udp: <span class="number">1232</span></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;pwecho.com.                    <span class="keyword">IN</span>      A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">pwecho.com.             <span class="number">600</span>     <span class="keyword">IN</span>      CNAME   pwecho.com.cdn.cloudflare.<span class="built_in">net</span>.</span><br><span class="line">pwecho.com.cdn.cloudflare.<span class="built_in">net</span>. <span class="number">300</span> <span class="keyword">IN</span>   A       <span class="number">104</span>.<span class="number">26</span>.<span class="number">6</span>.<span class="number">173</span></span><br><span class="line">pwecho.com.cdn.cloudflare.<span class="built_in">net</span>. <span class="number">300</span> <span class="keyword">IN</span>   A       <span class="number">104</span>.<span class="number">26</span>.<span class="number">7</span>.<span class="number">173</span></span><br><span class="line">pwecho.com.cdn.cloudflare.<span class="built_in">net</span>. <span class="number">300</span> <span class="keyword">IN</span>   A       <span class="number">172</span>.<span class="number">67</span>.<span class="number">69</span>.<span class="number">29</span></span><br><span class="line"></span><br><span class="line">;; Query <span class="built_in">time</span>: <span class="number">280</span> msec</span><br><span class="line">;; SERVER: <span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>#<span class="number">53</span>(<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>.<span class="number">1</span>)</span><br><span class="line">;; WHEN: Sat Feb <span class="number">27</span> <span class="number">07</span>:<span class="number">17</span>:<span class="number">11</span> CET <span class="number">2021</span></span><br><span class="line">;; MSG SIZE  rcvd: <span class="number">130</span></span><br></pre></td></tr></table></figure><p>从上面结果可以看出，<code>pwecho.com.cdn.cloudflare.net</code> 本身返回的就是 <code>A</code> 记录，而它做的只是将你的 <code>MX</code> 记录也加到他的 <code>CNAME</code> 域名解析中，所以完全没有问题，而 <code>DNSPOD</code> 虽然还是返回 <code>CNAME</code> 来解析 <code>A</code> 记录，但是实测多次并没有发现出现查询 <code>MX</code>, <code>CNAME</code> 混乱返回的情况, 但同样我也<strong>尚未能提供资料证明不会出现这个问题</strong>。</p><blockquote><p>⚠️ 补充测试结果: 通过 <a href="https://www.boce.com/dns/">https://www.boce.com/dns/</a> 测试发现全国查询的时候会有部分地区随机返回 <code>CNAME</code> 记录，所以这个方法还是不稳定，<code>Cloudflare</code> 那种实现对境外邮箱来说则完全没有问题</p></blockquote><p>其实这里还有个发现，即便是国内的 <code>QQ邮箱</code>, <code>腾讯企业邮箱</code>, <code>163邮箱</code> 或者是国外的 <code>Gmail</code>, <code>Outlook</code> 都会查询出境外的MX记录，即便境内没设置MX记录也可，所以如果不放心其实可以直接干掉境内的MX记录，只让 <code>Cloudflare</code> 返回 <code>MX</code> 记录也可以稳定运作 (不打包票，境内还有很多邮箱没有做测试</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://www.xiexianbin.cn/domains/2019-11-10-domain-mx-cname-conflict/index.html">域名解析的 MX 和 CNAME 记录冲突 - 谢先斌的博客</a></li><li><a href="https://help.aliyun.com/knowledge_detail/39787.html">解析记录冲突规则 - 阿里云文档</a></li><li><a href="https://erdong.site/article/cname-and-mx-conflicts.html">三种方法解决域名解析的主机记录冲突 - Erdong’ Blog</a></li><li><a href="https://www.oldking.net/121.html">域名 MX 记录与 CNAME 冲突 - 老鬼的博客</a></li><li><a href="https://tools.ietf.org/pdf/rfc1034.pdf">RCF 1034 - 下载PDF文件</a></li><li><a href="https://serverfault.com/questions/91712/dns-using-cnames-breaks-mx-records/91718">DNS using CNAMEs breaks MX records? - StackExchange</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> dns </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DNS </tag>
            
            <tag> 域名邮箱 </tag>
            
            <tag> 企业邮箱 </tag>
            
            <tag> GEODNS </tag>
            
            <tag> 区域解析 </tag>
            
            <tag> MX共存 </tag>
            
            <tag> MX </tag>
            
            <tag> CNAME </tag>
            
            <tag> Cloudflare </tag>
            
            <tag> Dnspod </tag>
            
            <tag> 百度CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于《Kubernetes 混合云用Kilo解决NAT节点通讯的问题》的那件事</title>
      <link href="service/kubernetes/2021/kubernetes/k8s-%E6%B7%B7%E5%90%88%E4%BA%91%E7%BB%84%E7%BD%91/"/>
      <url>service/kubernetes/2021/kubernetes/k8s-%E6%B7%B7%E5%90%88%E4%BA%91%E7%BB%84%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<h2 id="pre-post"><a href="#pre-post" class="headerlink" title="pre-post()"></a>pre-post()</h2><p>最近有在学习K8S相关，同时也将自己的所有服务全部都迁移到了K8S集群上，感受到K8S强大的同时也能明显感受到对于我这种一般用户环境的部署不是很友好，例如建议的高可用集群至少要有 <code>三台</code> Master, <code>三台</code> Worker, 对我这种 <del>穷逼</del> 普通玩家来说是很高昂的，但经过几次实践把生产环境搞炸几次后觉得这是有必要的(哭)，但我的想法是用K8S作为我主要部署方式，所以还是非常高昂的，像我这种为了能够管理所有节点但是又不会重度使用K8S的，这里推荐 <code>K3S</code> 来代替K8S作为要求不高的生产环境，不过这篇文章还是用完整的K8S来做，但理论上 <code>K3S</code> 是完全通用的。</p><span id="more"></span><h2 id="subject-‘实现目标’"><a href="#subject-‘实现目标’" class="headerlink" title="subject(‘实现目标’)"></a>subject(‘实现目标’)</h2><p>利用 <code>Kilo</code> 将带有公网IP的NAT云服务器组成K8S集群，支持 <code>P2P</code>, <code>DDNS</code> (要求有公网IP且需要端口映射)</p><h2 id="subject-‘Kilo介绍’"><a href="#subject-‘Kilo介绍’" class="headerlink" title="subject(‘Kilo介绍’)"></a>subject(‘Kilo介绍’)</h2><p><a href="https://github.com/squat/kilo">Kilo</a> 是一个通过 <code>Wireguard</code> 用于建立混合云网络的工具</p><h2 id="subject-‘现有问题’"><a href="#subject-‘现有问题’" class="headerlink" title="subject(‘现有问题’)"></a>subject(‘现有问题’)</h2><p>我的服务器构成是这样的(以下IP皆为虚拟): </p><table><thead><tr><th align="left">Name</th><th align="left">ifc-IP</th><th align="left">Location</th><th align="left">Role</th><th align="left">Nat</th></tr></thead><tbody><tr><td align="left">k8s-master</td><td align="left">123.123.123.123</td><td align="left">Hetzner</td><td align="left">Master</td><td align="left">NO</td></tr><tr><td align="left">cn-sh01-node</td><td align="left">10.0.0.4</td><td align="left">QCloud</td><td align="left">Worker</td><td align="left">YES</td></tr><tr><td align="left">cn-hz01-node</td><td align="left">192.168.1.120</td><td align="left">Home</td><td align="left">Worker</td><td align="left">YES</td></tr></tbody></table><p>可以看到我的三台服务器都不是同一个网段甚至都不是同一个服务商的。<br>所以会有几个问题</p><ul><li>kube-proxy 无法正常工作转发流量</li><li>metrics 采集无法工作</li><li>logs/shell 无法工作</li></ul><h2 id="subject-‘解决问题’"><a href="#subject-‘解决问题’" class="headerlink" title="subject(‘解决问题’)"></a>subject(‘解决问题’)</h2><p>之前是用 <code>Weave</code> 来作为CNI的，然后为了解决 <code>kube-proxy</code> 的一些问题换成了 <code>Flannel</code>, 网上查找一些资料和issues以后发现如果要解决这个问题，就得先将所有节点连起来，连起来的方法就是VPN，然后让通讯流量走VPN接口即可解决，但是按常规理解VPN流量是需要中心服务器转发流量的，那就会导致所有流量转发到同一台服务器，压力和延迟也会非常大不符合需求，然后我去搜了P2P VPN发现 <code>Wireguard</code> 是支持Peer2Peer的，顺势在某个issue里看到有人提到用 <code>Kilo</code> 进行自动组网，并且 <code>Kilo</code> 是支持在 <code>Flannel</code> 之上运行的</p><h3 id="端口通讯检查"><a href="#端口通讯检查" class="headerlink" title="端口通讯检查"></a>端口通讯检查</h3><p>我是采用 Flannel+Calico+Kilo 的方式设置网络的，所以需要以下端口放通</p><table><thead><tr><th align="left">Port Range</th><th align="left">Protocol</th><th align="left">Remark</th></tr></thead><tbody><tr><td align="left">8285</td><td align="left">UDP</td><td align="left">Flannel</td></tr><tr><td align="left">8472</td><td align="left">UDP</td><td align="left">Flannel</td></tr><tr><td align="left">51820</td><td align="left">UDP</td><td align="left">Wireguard 默认端口</td></tr><tr><td align="left">10250</td><td align="left">TCP</td><td align="left">Kubelet API</td></tr><tr><td align="left">30000-32767</td><td align="left">TCP+UDP</td><td align="left">NodePort 服务端口</td></tr></tbody></table><h3 id="安装-Kilo"><a href="#安装-Kilo" class="headerlink" title="安装 Kilo"></a>安装 Kilo</h3><p>Kubeadm</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/squat/</span>kilo<span class="regexp">/master/m</span>anifests/kilo-kubeadm-flannel.yaml</span><br></pre></td></tr></table></figure><blockquote><p>如果要卸载，直接 kubectl delete 就好了</p></blockquote><h3 id="配置外部连接IP"><a href="#配置外部连接IP" class="headerlink" title="配置外部连接IP"></a>配置外部连接IP</h3><p>由于目前尚未支持 <code>NAT to NAT(理论可以实现)</code>，所以每个Node都必须具备外部(公网)访问条件，但是你会发现一件事，每个Node都只会拿到网卡的IP，它没办法发现你的外部IP</p><p>所以就像 <code>Flannel</code> 通过 <code>flannel.alpha.coreos.com/public-ip-overwrite</code> 来覆写外部通讯IP一样 <code>Kilo</code> 同样也提供了 <code>kilo.squat.ai/force-endpoint</code> 来指定外部通讯连接点，格式是 <code>&quot;IP:PORT&quot;</code> 或者 <code>&quot;[DOMAIN]:PORT&quot;</code>，是的，它支持域名，所以就可以实现我们 <code>HOME</code> worker的DDNS需求，只要防火墙放通端口或者路由器转发端口就可以自由通讯了</p><p>编辑 <code>cn-hz01-node</code> 节点，在 <code>metadata.annotations</code> 里加入 <code>kilo.squat.ai/force-endpoint: &#39;[home.mydomain.com]:51820&#39;</code>，然后过一会通过 <code>kubectl desc node cn-hz01-node</code> 就可以看到它自动解析了域名并且添加了一个新的 <code>kilo.squat.ai/endpoint</code> annotation，值为你域名指向的IP</p><p>同样此方法去更改 <code>cn-sh01-node</code> 的 annotations，过一会就可以看到 metrics 信息已经正常显示了(前提是你已经部署了metrics采集)</p><blockquote><p>建议采用 <code>Flannel</code> 的 <code>vxlan</code> 作为后端，不采用 <code>IPSec</code> 等加密后端避免不必要的二次开销</p></blockquote><h3 id="关于N2N实现"><a href="#关于N2N实现" class="headerlink" title="关于N2N实现"></a>关于N2N实现</h3><blockquote><p>目前 <code>Kilo</code> 的N2N实现还在讨论并且已经在计划适配，具体可以在这里看到 <a href="https://github.com/squat/kilo/issues/109">https://github.com/squat/kilo/issues/109</a></p></blockquote><h2 id="subject-‘不通过VPN外部直连的可能性’"><a href="#subject-‘不通过VPN外部直连的可能性’" class="headerlink" title="subject(‘不通过VPN外部直连的可能性’)"></a>subject(‘不通过VPN外部直连的可能性’)</h2><p>说个题外话，假如全部NODE都是有公网IP但是会有一层NAT的能不能正常通讯呢，这个读过一点Kubernetes的代码，这个是有可能的，就是更改Node的 <code>status.addresses</code> 添加一个 <code>Type</code> 为 <code>ExternalIP</code> 的IP地址，但是这里有个问题就是，你没办法直接编辑或者patch一个node的status值，那么这个addresses是怎么来的呢？</p><p>addresses 实际上是通过 <code>cloud-provider</code> 设置的，他读取你的网卡并将其IP设置为 <code>InternalIP</code> 的address, 如果你是GCE, Azure等，他们会去跟平台通讯获取你机器的外网绑定网卡信息，并且设置为 <code>ExternalIP</code>，而 <code>metrics-server</code> 的默认启动参数 <code>--kubelet-preferred-address-types=ExternalIP,InternalIP,Hostname</code> 定义了它会尝试去和外部IP、内部IP、主机名进行通讯，所以如果你是通过云服务商的k8s托管，那么它就会自动设置外部IP，但是手工设置是行不通的，所以如果自己写一个 “Fake” cloud-provider 的话也许也行得通，但其实价值就很低了，不如直接VPN组网来的实在。</p>]]></content>
      
      
      <categories>
          
          <category> service </category>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> K8S </tag>
            
            <tag> K3S </tag>
            
            <tag> Wireguard </tag>
            
            <tag> Kilo </tag>
            
            <tag> Peer2Peer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker - 给每个容器配置公网IP</title>
      <link href="service/2018/docker/Docker-%E7%BB%99%E6%AF%8F%E4%B8%AA%E5%AE%B9%E5%99%A8%E9%85%8D%E7%BD%AE%E5%85%AC%E7%BD%91IP/"/>
      <url>service/2018/docker/Docker-%E7%BB%99%E6%AF%8F%E4%B8%AA%E5%AE%B9%E5%99%A8%E9%85%8D%E7%BD%AE%E5%85%AC%E7%BD%91IP/</url>
      
        <content type="html"><![CDATA[<h2 id="pre-post"><a href="#pre-post" class="headerlink" title="pre-post()"></a>pre-post()</h2><p>为了方便部署流量转发服务，采用了Docker来干这个事，一般情况下一台节点只有一个IP，使用端口映射或者用参数 <code>--network host</code> 直接使用主机的网络来监听和转发是没有问题的，但是有一些节点会存在多个或一个段的外部IP，这时候虽然 <code>IN</code> 方向没有问题，但是 <code>OUT</code> 方向只会采用主机设置的默认路由来访问，就导致了转发的流量都使用同一个IP转发出去了，这是不对的，所以接下来就研究如何才能自定义出口流量，这篇文章则采用给容器配置外部IP的方式实现。</p><blockquote><p>此方法适合非NAT主机</p></blockquote><span id="more"></span><h2 id="subject-‘实现目标’"><a href="#subject-‘实现目标’" class="headerlink" title="subject(‘实现目标’)"></a>subject(‘实现目标’)</h2><p>给每个 Docker 容器都配置不同的公网IP出口</p><h2 id="solution-‘附加网络到容器’"><a href="#solution-‘附加网络到容器’" class="headerlink" title="solution(‘附加网络到容器’)"></a>solution(‘附加网络到容器’)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从 eth1 接口删除IP</span></span><br><span class="line">$ sudo ip addr del 192.168.33.10/24 dev eth1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个桥接名称为 “docker1” 的 shared_nw 网络</span></span><br><span class="line">$ sudo docker network create --driver bridge --subnet=192.168.33.0/24 --gateway=192.168.33.10 --opt <span class="string">&quot;com.docker.network.bridge.name&quot;</span>=<span class="string">&quot;docker1&quot;</span> shared_nw</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 “docker1” 到 eth1</span></span><br><span class="line">$ sudo brctl addif docker1 eth1</span><br></pre></td></tr></table></figure><blockquote><p>其中 <code>192.168.33.0/24</code> 是子网段, <code>192.168.33.10</code> 是IP地址</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过 curl 容器来验证IP结果</span></span><br><span class="line">$ docker run -it curlimages/curl --net shared_nw --ip 192.168.33.11 ip.sb</span><br><span class="line"><span class="comment"># 输出结果: 192.168.33.11</span></span><br></pre></td></tr></table></figure><p>这样这个容器本身的IP就变成了外部IP</p><h3 id="弊端"><a href="#弊端" class="headerlink" title="弊端"></a>弊端</h3><p>采用这种方法会把主机的IP剥离，如果你没有其他接入网卡的话会导致断网无法外部进入，只能通过 <code>Console</code> 来调整</p><h3 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h3><ul><li><a href="https://forums.docker.com/t/public-accessible-ip-in-container-like-bridge-network-in-virtualbox/3668/6">https://forums.docker.com/t/public-accessible-ip-in-container-like-bridge-network-in-virtualbox/3668/6</a></li><li><a href="https://qiita.com/kjtanaka/items/f16757c1f0cc86ff225b">https://qiita.com/kjtanaka/items/f16757c1f0cc86ff225b</a></li></ul><h2 id="solution-‘桥接网络IP’"><a href="#solution-‘桥接网络IP’" class="headerlink" title="solution(‘桥接网络IP’)"></a>solution(‘桥接网络IP’)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建名为 &quot;pnet01&quot; 的 macvlan 网络</span></span><br><span class="line">$ docker network create -d macvlan --subnet 23.89.4.0/24 --gateway 23.89.4.1 -o parent=ens3 --aux-address=<span class="string">&quot;master=23.89.4.205&quot;</span> pnet01</span><br></pre></td></tr></table></figure><blockquote><p>其中 <code>23.89.4.0/24</code> 是子网段, <code>23.89.4.1</code> 是网关地址, <code>ens3</code> 是网卡接口名称, <code>23.89.4.205</code> 是外部IP</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过 curl 容器来验证IP结果</span></span><br><span class="line">$ docker run -it curlimages/curl --net pnet01 --ip 23.89.4.207 ip.sb</span><br><span class="line"><span class="comment"># 输出结果: 23.89.4.207</span></span><br></pre></td></tr></table></figure><blockquote><p>其中 <code>23.89.4.207</code> 是要分配给容器的同网段的IP</p></blockquote><h3 id="其他信息"><a href="#其他信息" class="headerlink" title="其他信息"></a>其他信息</h3><p>主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">ens3: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 23.89.4.205  netmask 255.255.255.0  broadcast 23.89.4.255</span><br><span class="line">        inet6 fe80::216:3cff:fe7e:fbeb  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:16:3c:7e:fb:eb  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 96281  bytes 7457992 (7.1 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 5325  bytes 1603561 (1.5 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># route</span></span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">default         1.4-89-23.rdns. 0.0.0.0         UG    0      0        0 ens3</span><br><span class="line">localnet        0.0.0.0         255.255.255.0   U     0      0        0 ens3</span><br><span class="line">172.17.0.0      0.0.0.0         255.255.0.0     U     0      0        0 docker0</span><br></pre></td></tr></table></figure><p>容器内</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 02:42:17:59:04:CF</span><br><span class="line">          inet addr:23.89.4.207  Bcast:0.0.0.0  Mask:255.255.255.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:27457 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:579 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0</span><br><span class="line">          RX bytes:1839527 (1.7 MiB)  TX bytes:81473 (79.5 KiB)</span><br><span class="line"></span><br><span class="line"><span class="comment"># route</span></span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">default         1.4-89-23.rdns. 0.0.0.0         UG    0      0        0 eth0</span><br><span class="line">23.89.4.0       *               255.255.255.0   U     0      0        0 eth0</span><br></pre></td></tr></table></figure><h3 id="弊端-1"><a href="#弊端-1" class="headerlink" title="弊端"></a>弊端</h3><p>仅适用于拥有一个段的IP的服务器，采用这种方式的主机会保留一个IP用于通讯和桥接，然后分配同网段的其他IP给容器，如果有不同网段和网关的IP，就需要同样创建第二个网络</p><h3 id="参考来源-1"><a href="#参考来源-1" class="headerlink" title="参考来源"></a>参考来源</h3><ul><li><a href="https://docs.docker.com/network/network-tutorial-macvlan/#bridge-example">https://docs.docker.com/network/network-tutorial-macvlan/#bridge-example</a></li><li><a href="https://www.aquasec.com/wiki/display/containers/Docker+Networking+101">https://www.aquasec.com/wiki/display/containers/Docker+Networking+101</a></li></ul><h2 id="subject-‘End’"><a href="#subject-‘End’" class="headerlink" title="subject(‘End’)"></a>subject(‘End’)</h2><p>这篇文章内容是 <code>2018</code> 年写的，一直咕咕到 <code>2021</code> 年才补上，对现在的我来说对容器以及网络方面有了新的理解，所以这篇文章内容其实也算是有点 <code>过时</code> 了，还有一个方法是采用 <code>iptables</code> NAT进行实现，但是人工维护显然有些繁琐，虽然我没有再这个方向继续研究了，但是希望能给有需要的人一个参考。</p>]]></content>
      
      
      <categories>
          
          <category> service </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="misc/2018/hello-world/"/>
      <url>misc/2018/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Hello Everyone, I’m Mitt, and I wish you all Have fun every day!</p>]]></content>
      
      
      
        <tags>
            
            <tag> Milestone </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
